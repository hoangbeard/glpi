upstream fastcgi_php {
    server  unix:/var/run/php/php-fpm.sock;
}

# HTTP server - redirects to HTTPS
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    # Use environment variable for server_name if available, otherwise use default
    server_name _;
    
    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # Allow Let's Encrypt HTTP challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html/public;
    }
}

# HTTPS server
server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    
    # Use environment variable for server_name if available, otherwise use default
    server_name _;

    root /var/www/html/public;
    
    # SSL certificate configuration
    ssl_certificate     /glpi-data/certs/domain/server.crt;
    ssl_certificate_key /glpi-data/certs/domain/server.key;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # HSTS (comment out if you encounter issues with mixed content)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php$ {
        fastcgi_pass fastcgi_php;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
    }

    # Enable gzip compression for text-based content
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers hardening
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    server_tokens off;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ajax.googleapis.com; img-src 'self' https://*.googleusercontent.com; style-src 'self' 'unsafe-inline'; font-src 'self' data:; object-src 'none'";

    # Turn off logging for favicon and robots requests
    location = /favicon.ico {
        access_log off; log_not_found off;
    }
    location = /robots.txt {
        access_log off; log_not_found off;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}